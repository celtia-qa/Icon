openapi: 3.0.0
info:
  title: Critically Faulty API
  description: This API specification is intentionally broken with critical errors.
  version: 1.0.0
  contact:
    name: Support Team
    email: support@brokenapi.com

paths:
  /users:
    get:
      summary: Get a list of users
      operationId: listUsers
      parameters:
        - name: limit
          in: query
          description: Maximum number of users to return
          required: false
          schema:
            type: integer
            default: "10"  # Critical Error: Default should be an integer, not a string
      responses:
        '200':
          description: A JSON array of users
          content:
            application/json:
              schema:
                type: object  # Critical Error: Should be array since it's described as a list
                properties:
                  id:
                    type: string
                    example: 12345
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}:
    get:
      summary: Get user by ID
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            description: ID of the user to retrieve
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        'default':  # Critical Error: Use of 'default' inappropriately
          description: Default error response
          content:
            application/json:
              schema:
                type: array  # Critical Error: Should be object, not array
                items:
                  type: string

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        unknownProperty:  # Critical Error: Undefined property type
          description: Undefined property type

    Error:
      type: object
      properties:
        code:
          type: integer
          example: 500
        message:
          type: string
          example: Internal server error
        details:
          $ref: '#/components/schemas/NonExistentSchema'  # Critical Error: Reference to a non-existent schema
